{"version":3,"file":"0-GoodreadsBookshelf.stories-affc22c2.js","sources":["../../src/util/get-url.ts","../../src/util/html-utils.ts","../../src/util/api.ts","../../src/hooks/useGoodreadsShelf.ts","../../src/components/Placeholder.tsx","../../src/components/Cover.tsx","../../src/components/Rating.tsx","../../src/components/Book.tsx","../../src/components/BookList.tsx","../../src/components/Loader.tsx","../../src/components/GoodreadsBookshelf.tsx"],"sourcesContent":["import { Props } from \"../types\";\n\nexport const getUrl = (props: Props, page: number): URL => {\n  // Build a request to the Goodreads API\n  const url = new URL(`https://www.goodreads.com/review/list/${props.userId}`);\n\n  url.searchParams.set(\"shelf\", props.shelf || \"read\");\n  url.searchParams.set(\"sort\", props.sort || \"date_read\");\n  url.searchParams.set(\"order\", props.order || \"d\");\n  url.searchParams.set(\"page\", String(page));\n\n  // If this is provided as an empty string, you can get wildly different results for currently-reading\n  if (props.search) {\n    url.searchParams.set(\"search[query]\", props.search);\n  }\n\n  return new URL(`https://cors.kylekarpack.workers.dev/corsproxy/?apiurl=${encodeURIComponent(url.toString())}`);\n};\n","import { Book } from \"../types\";\n\nexport const getBooksFromHtml = (html: string, width: string | number | undefined = 150): Book[] => {\n  const parser = new DOMParser();\n  const goodreadsDocument = parser.parseFromString(html, \"text/html\");\n  const bookElements = goodreadsDocument.querySelectorAll(\"tr\");\n  const bookArray = Array.from(bookElements);\n  // Get width if not a number\n  let newWidth: number;\n  if (typeof width !== \"number\") {\n    newWidth = parseInt(width) || 100;\n  } else {\n    newWidth = width;\n  }\n  return bookArray.map((el) => bookMapper(el, newWidth));\n};\n\nconst bookMapper = (row: Element, thumbnailWidth: number): Book => {\n  const isbn = row?.querySelector(\"td.field.isbn .value\")?.textContent?.trim();\n  const asin = row?.querySelector(\"td.field.asin .value\")?.textContent?.trim();\n  let title = row?.querySelector(\"td.field.title a\")?.getAttribute(\"title\") ?? \"\";\n  const author = row\n    ?.querySelector(\"td.field.author .value\")\n    ?.textContent?.trim()\n    .replace(\" *\", \"\")\n    .split(\", \")\n    .reverse()\n    .join(\" \");\n  const imageUrl = row\n    ?.querySelector(\"td.field.cover img\")\n    ?.getAttribute(\"src\")\n    // Get a thumbnail of the requested width\n    // Add some padding factor for higher-quality rendering\n    ?.replace(/\\._(S[Y|X]\\d+_?){1,2}_/i, `._SX${thumbnailWidth * 2}_`);\n  const href = row?.querySelector(\"td.field.cover a\")?.getAttribute(\"href\");\n  const rating = row?.querySelectorAll(\"td.field.rating .staticStars .p10\")?.length;\n\n  const dateReadString = row?.querySelector(\"td.field.date_read .date_read_value\")?.textContent;\n  const dateAddedString = row?.querySelector(\"td.field.date_added span\")?.textContent;\n  const dateRead = dateReadString ? new Date(dateReadString) : undefined;\n  const dateAdded = dateAddedString ? new Date(dateAddedString) : undefined;\n\n  let subtitle = \"\";\n  const splitTitle = title.split(\":\");\n  if (splitTitle.length > 1) {\n    title = splitTitle[0];\n    subtitle = splitTitle[1];\n  }\n\n  const parens = title.match(/\\(.*\\)/);\n  if (parens) {\n    const [match] = parens;\n    subtitle = match.replace(\"(\", \"\").replace(\")\", \"\");\n    title = title.replace(match, \"\");\n  }\n\n  return {\n    id: `${isbn || asin || window.crypto.randomUUID()}`,\n    isbn,\n    asin,\n    title,\n    subtitle,\n    author,\n    imageUrl,\n    rating,\n    dateRead,\n    dateAdded,\n    link: `https://www.goodreads.com/${href}`\n  };\n};\n","import { Book, BookGroup, FetchResults, Props, Status } from \"../types\";\nimport { getUrl } from \"./get-url\";\nimport { getBooksFromHtml } from \"./html-utils\";\n\nconst GOODREADS_PAGE_SIZE = 30;\n\nexport const ALL_GROUP_TITLE = \"All\";\n\nexport const fetchAllBooks = async (props: Props): Promise<BookGroup[]> => {\n  // Get first page\n  const firstPage = await fetchPage(1, props);\n  const maxBooks = Math.min(props.limit ?? 10, firstPage.status.total);\n  const maxPages = Math.ceil(maxBooks / GOODREADS_PAGE_SIZE);\n  const promises: Promise<FetchResults>[] = [];\n\n  for (let i = 2; i <= maxPages; i++) {\n    promises.push(fetchPage(i, props));\n  }\n\n  const data = await Promise.all(promises);\n\n  data.sort((a, b) => {\n    return a.status.end - b.status.end;\n  });\n\n  let books = data.reduce((prev, cur) => {\n    return prev.concat(cur.books);\n  }, firstPage.books);\n\n  // Optionally filter the books\n  if (props.filter) {\n    books = books.filter(props.filter);\n  }\n\n  if (props.limit) {\n    books = books.slice(0, props.limit);\n  }\n\n  if (props.groupBy) {\n    const grouped = books.reduce((prev: { [key: string]: Book[] }, cur: Book) => {\n      const key = String((cur.dateRead || cur.dateAdded)?.getFullYear());\n      prev[key] = prev[key] || [];\n      prev[key].push(cur);\n      return prev;\n    }, {});\n\n    const groups: BookGroup[] = [];\n    for (const key in grouped) {\n      groups.push({\n        title: key,\n        books: grouped[key]\n      });\n    }\n    groups.sort((a, b) => {\n      return Number(b.title) - Number(a.title);\n    });\n    return groups;\n  } else {\n    return [\n      {\n        title: ALL_GROUP_TITLE,\n        books\n      }\n    ];\n  }\n};\n\nconst fetchPage = async (page: number, props: Props): Promise<FetchResults> => {\n  // Get the books from Goodreads\n  const url = getUrl(props, page);\n  url.searchParams.append(\"page\", String(page));\n  const response = await window.fetch(url.toString(), { headers: { accept: \"text/javascript\" } });\n\n  // Simulate success if we get a 204 No Content response\n  if (response.status === 204) {\n    return {\n      books: [],\n      status: {\n        end: page * 30,\n        total: 0\n      }\n    };\n  }\n\n  const responseBody = await response.text();\n  const { html, status } = parseJsonP(responseBody);\n  const table = `<table>${html}</table>`;\n  const books = getBooksFromHtml(table, props.width);\n  return {\n    books,\n    status\n  };\n};\n\nconst parseJsonP = (jsonp: string): { html: string; status: Status } => {\n  const [html, status] = jsonp.split(\"\\n\");\n\n  // eslint-disable-next-line quotes\n  const json = html.replace('Element.insert(\"booksBody\", ', \"\").replace(\" });\", \"}\").replace(\"bottom\", '\"bottom\"');\n  const output: string = JSON.parse(json).bottom;\n\n  const matches = status.match(/(?<end>\\d*) of (?<total>\\d*) loaded/);\n  return {\n    html: output,\n    status: {\n      end: parseInt(matches?.groups?.end ?? \"0\"),\n      total: parseInt(matches?.groups?.total ?? \"0\")\n    }\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport { BookGroup, Props } from \"../types\";\nimport { fetchAllBooks } from \"../util\";\n\nconst useGoodreadsShelf = (props: Props) => {\n  const { userId, limit, order, search, shelf, sort } = props;\n  const [books, setBooks] = useState<BookGroup[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const refresh = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const books = await fetchAllBooks(props);\n      setBooks(books);\n    } catch (err: unknown) {\n      setError(err as Error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    refresh();\n  }, [userId, limit, order, search, shelf, sort]);\n\n  return { books, loading, error };\n};\n\nexport default useGoodreadsShelf;\n","import React, { FunctionComponent } from \"react\";\n\nconst Placeholder: FunctionComponent = () => {\n  return (\n    <div>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ width: \"100%\" }} viewBox=\"0 0 170 250\">\n        <path style={{ fill: \"#ffffff\", stroke: \"none\" }} d=\"M0 0L0 240L170 240L170 0L0 0z\" />\n        <path style={{ fill: \"#000000\", stroke: \"none\" }} d=\"M82 61L83 62L82 61z\" />\n        <path\n          style={{ fill: \"#808080\", stroke: \"none\" }}\n          d=\"M93 145C79.6257 141.205 63.417 138.566 51.0401 132.235C46.9518 130.144 41.5316 121.554 47.3179 118.068C50.6475 116.062 56.6487 119.038 60 120L80 125.579C83.4433 126.56 87.3543 128.206 90.9961 127.812C95.0859 127.369 97.4951 123.882 100 120.999C105.227 114.984 110.546 109.055 115.729 103C121.144 96.673 126.701 90.4409 131.981 84C134.072 81.4479 137.039 77.7432 134.957 74.3032C133.56 71.995 130.402 71.472 128 70.885C122.364 69.5077 116.654 68.419 111 67.1188C104.688 65.6674 98.3344 64.3539 92 63C89.2014 62.4019 85.8624 61.1288 83 61.9159C76.588 63.679 71.3975 72.3808 67.0355 77C63.9636 80.253 61.0812 83.6855 58.0748 87C47.4655 98.6969 26.6977 117.282 38.9699 134.907C42.2427 139.607 47.7809 141.351 53 142.975C62.2818 145.863 71.6555 148.463 81 151.141C85.2587 152.362 91.5271 155.739 95.9105 153.731C99.4375 152.115 102.007 147.89 104.414 145C109.434 138.971 114.602 133.068 119.576 127C126.295 118.802 135.654 111.058 135.454 100C135.402 97.0889 136.725 92.9476 133.685 91.0471C129.481 88.4187 126.946 93.731 126.329 97.0008C122.619 116.665 101.124 127.263 93 145z\"\n        />\n        <path\n          style={{ fill: \"#000000\", stroke: \"none\" }}\n          d=\"M85 61L86 62L85 61M112 67L113 68L112 67M117 68L118 69L117 68M72 71L73 72L72 71z\"\n        />\n        <path style={{ fill: \"#555555\", stroke: \"none\" }} d=\"M80 78L81 79L80 78z\" />\n        <path\n          style={{ fill: \"#ffffff\", stroke: \"none\" }}\n          d=\"M77 84C83.6869 85.3802 90.3853 87.037 97 88.7315C103.67 90.4403 109.474 92.3156 113 85C105.981 83.9673 98.9214 81.7562 92 80.1157C85.4991 78.5749 80.3963 76.9541 77 84z\"\n        />\n        <path style={{ fill: \"#000000\", stroke: \"none\" }} d=\"M110 89L111 90L110 89M54 91L55 92L54 91z\" />\n        <path style={{ fill: \"#aaaaaa\", stroke: \"none\" }} d=\"M122 108L123 109L122 108z\" />\n        <path\n          style={{ fill: \"#000000\", stroke: \"none\" }}\n          d=\"M121 109L122 110L121 109M37 112L38 113L37 112M116 115L117 116L116 115z\"\n        />\n        <path\n          style={{ fill: \"#555555\", stroke: \"none\" }}\n          d=\"M103 116L104 117L103 116M46 117L47 118L46 117M45 118L46 119L45 118z\"\n        />\n        <path\n          style={{ fill: \"#000000\", stroke: \"none\" }}\n          d=\"M124 120L125 121L124 120M69 122L70 123L69 122M37 132L38 133L37 132M50 132L51 133L50 132M42 138L43 139L42 138M109 138L110 139L109 138z\"\n        />\n        <path style={{ fill: \"#555555\", stroke: \"none\" }} d=\"M87 143L88 144L87 143z\" />\n        <path style={{ fill: \"#000000\", stroke: \"none\" }} d=\"M99 150L100 151L99 150M82 151L83 152L82 151z\" />\n      </svg>\n    </div>\n  );\n};\n\nexport default Placeholder;\n","import { CSSProperties, FunctionComponent, useEffect, useMemo, useRef, useState } from \"react\";\nimport type { Book, Props } from \"../types\";\nimport Placeholder from \"./Placeholder\";\nimport styles from \"./Cover.module.css\";\n\nconst Cover: FunctionComponent<{ book: Book; options?: Props }> = ({ book, options }) => {\n  const [state, setState] = useState({ error: false });\n  const [isInView, setIsInView] = useState(false);\n\n  const root = useRef(null);\n\n  useEffect(() => {\n    const observer = new window.IntersectionObserver(\n      (entries) => {\n        const { isIntersecting } = entries[0];\n        if (isIntersecting) {\n          observer.disconnect();\n        }\n\n        setIsInView(isIntersecting);\n      },\n      { threshold: 0 }\n    );\n    if (root?.current) {\n      observer.observe(root.current);\n    }\n  }, []);\n\n  let { imageUrl } = book;\n  if (!imageUrl) {\n    if (book.isbn) {\n      imageUrl = `https://images-na.ssl-images-amazon.com/images/P/${book.isbn}.01._SCLZZZZZZZ_.jpg`;\n    } else if (book.asin) {\n      imageUrl = `https://images-na.ssl-images-amazon.com/images/P/${book.asin}.01._SCLZZZZZZZ_.jpg`;\n    }\n  }\n\n  const onError = () => setState({ error: true });\n\n  const getBackground = useMemo(\n    () =>\n      (imageUrl: string): CSSProperties => {\n        let backgroundImage = \"\";\n\n        if (!options?.displayOptions?.hideBackgroundImages) {\n          if (isInView) {\n            backgroundImage = `url(\"${imageUrl}\")`;\n          }\n        }\n\n        return {\n          backgroundImage,\n          opacity: isInView ? 1 : 0\n        };\n      },\n    [imageUrl, isInView, options?.displayOptions?.hideBackgroundImages]\n  );\n\n  return (\n    <div ref={root} className={`rgs-cover ${styles.cover}`} style={getBackground(imageUrl!)}>\n      {state.error ? (\n        <div className=\"rgs-placeholder\" data-testid=\"placeholder\">\n          <Placeholder />\n        </div>\n      ) : (\n        <div>\n          <img\n            alt={book.title}\n            className={`rgs-image ${styles.image}`}\n            src={imageUrl}\n            loading=\"lazy\"\n            onError={onError}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cover;\n","import React, { FunctionComponent } from \"react\";\n\nconst Rating: FunctionComponent<{ stars?: number }> = ({ stars }) => {\n  if (stars) {\n    const arr = new Array(stars).fill(\"★\");\n    return (\n      <div role=\"presentation\">\n        {arr.map((el, i) => (\n          <span key={i}>{el}</span>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Rating;\n","import { FunctionComponent } from \"react\";\nimport type { Book as BookType, Props } from \"../types\";\nimport styles from \"./Book.module.css\";\nimport Cover from \"./Cover\";\nimport Rating from \"./Rating\";\n\nconst Details: FunctionComponent<{ book: BookType; options?: Props }> = ({ book, options }) => {\n  const hideDetails = options?.displayOptions?.hideDetails;\n  if (hideDetails === true) {\n    return null;\n  }\n  const shouldShow = (item: keyof BookType): boolean => {\n    if (hideDetails === false) {\n      return true;\n    }\n    return !hideDetails?.[item];\n  };\n\n  return (\n    <div className={`rgs-details ${styles.details}`}>\n      {shouldShow(\"title\") && <div className={`rgs-title ${styles.title}`}>{book.title}</div>}\n      {shouldShow(\"subtitle\") && book.subtitle ? (\n        <div className={`rgs-subtitle ${styles.subtitle}`}>{book.subtitle}</div>\n      ) : null}\n      {shouldShow(\"author\") && <div className={`rgs-author ${styles.author}`}>{book.author}</div>}\n      {shouldShow(\"rating\") && <Rating stars={book.rating} />}\n    </div>\n  );\n};\n\nconst Book: FunctionComponent<{ book: BookType; options?: Props }> = ({ book, options }) => {\n  if (!book) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className={`rgs-book ${styles.book}`} title={book.title}>\n        <a href={book.link} target=\"_blank\" rel=\"nofollow noreferrer\">\n          <Cover book={book} options={options} />\n        </a>\n      </div>\n      <Details book={book} options={options} />\n    </div>\n  );\n};\n\nexport default Book;\n","import { CSSProperties, FunctionComponent } from \"react\";\nimport { Book as BookType, Props } from \"../types\";\nimport Book from \"./Book\";\nimport styles from \"./BookList.module.css\";\n\nconst shelfStyle = (options?: Props): CSSProperties => {\n  let { width } = options || {};\n\n  if (typeof width === \"number\") {\n    width = `${width}px`;\n  }\n\n  width = width || \"170px\";\n\n  const gap = options?.displayOptions?.hideDetails ? `calc(${width} / 8)` : `calc(${width} / 6)`;\n\n  return {\n    gridTemplateColumns: `repeat(auto-fill, minmax(${width}, 1fr))`,\n    columnGap: options?.displayOptions?.gridStyle?.columnGap ?? gap,\n    rowGap: options?.displayOptions?.gridStyle?.rowGap ?? gap\n  };\n};\n\nconst BookList: FunctionComponent<{ books: BookType[]; options?: Props }> = ({ books, options }) => {\n  return (\n    <ul className={`rgs-shelf ${styles.shelf}`} style={shelfStyle(options)}>\n      {books.map((book) => {\n        return (\n          <li key={book.id}>\n            <Book book={book} options={options} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default BookList;\n","import { FunctionComponent } from \"react\";\n\nconst Loader: FunctionComponent = () => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <svg\n        width={50}\n        height={50}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n      >\n        <path d=\"M20 25h60v50H20z\" fill=\"transparent\" stroke=\"#85a2b6\" />\n        <path d=\"M50 25l9.421-3.43v56.86L50 75\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\"\n            keyTimes=\"0;0.5;0.501;1\"\n            dur={1.6}\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"1;1;0;0\"\n            keyTimes=\"0;0.5;0.5001;1\"\n            dur={1.6}\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path d=\"M50 25h30v50H50\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\"\n            keyTimes=\"0;0.5;0.501;1\"\n            dur={1.6}\n            begin=\"-0.2656s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"1;1;0;0\"\n            keyTimes=\"0;0.5;0.5001;1\"\n            dur={1.6}\n            begin=\"-0.2656s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path d=\"M50 25h30v50H50\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L80 25L80 75L50 75;M50 25L50 20L50 80L50 75;M50 25L80 25L80 75L50 75;M50 25L80 25L80 75L50 75\"\n            keyTimes=\"0;0.5;0.501;1\"\n            dur={1.6}\n            begin=\"-0.528s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"1;1;0;0\"\n            keyTimes=\"0;0.5;0.5001;1\"\n            dur={1.6}\n            begin=\"-0.528s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path d=\"M50 25l-10.379-3.27v56.54L50 75\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\"\n            keyTimes=\"0;0.499;0.5;1\"\n            dur={1.6}\n            begin=\"-0.528s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"0;0;1;1\"\n            keyTimes=\"0;0.4999;0.5;1\"\n            dur={1.6}\n            begin=\"-0.528s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path d=\"M50 25l-.539-4.91v59.82L50 75\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\"\n            keyTimes=\"0;0.499;0.5;1\"\n            dur={1.6}\n            begin=\"-0.2656s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"0;0;1;1\"\n            keyTimes=\"0;0.4999;0.5;1\"\n            dur={1.6}\n            begin=\"-0.2656s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path d=\"M50 25H20v50h30\" fill=\"transparent\" stroke=\"#85a2b6\">\n          <animate\n            attributeName=\"d\"\n            calcMode=\"linear\"\n            values=\"M50 25L20 25L20 75L50 75;M50 25L20 25L20 75L50 75;M50 25L50 20L50 80L50 75;M50 25L20 25L20 75L50 75\"\n            keyTimes=\"0;0.499;0.5;1\"\n            dur={1.6}\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            calcMode=\"linear\"\n            values=\"0;0;1;1\"\n            keyTimes=\"0;0.4999;0.5;1\"\n            dur={1.6}\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { FunctionComponent } from \"react\";\nimport useGoodreadsShelf from \"../hooks/useGoodreadsShelf\";\nimport { Props } from \"../types\";\nimport { ALL_GROUP_TITLE } from \"../util\";\nimport BookList from \"./BookList\";\nimport styles from \"./GoodreadsBookshelf.module.css\";\nimport Loader from \"./Loader\";\n\n/** Display a Goodreads bookshelf component */\nconst GoodreadsBookshelf: FunctionComponent<Props> = (props) => {\n  const { books, loading, error } = useGoodreadsShelf(props);\n\n  return (\n    <div className=\"rgs-shelf\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <div>\n          {books.map((el) => {\n            return (\n              <div key={el.title} className={`rgs-group ${styles.group}`}>\n                {el.title !== ALL_GROUP_TITLE && (\n                  <div className={`rgs-group-title ${styles.groupTitle}`}>\n                    {el.title}{\" \"}\n                    <small>\n                      ({el.books.length} {el.books.length === 1 ? \"book\" : \"books\"})\n                    </small>\n                  </div>\n                )}\n                <BookList books={el.books} options={props} />\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {error && <div>Sorry, we couldn't load books right now</div>}\n    </div>\n  );\n};\n\nexport default GoodreadsBookshelf;\n"],"names":["getUrl","props","page","url","getBooksFromHtml","html","width","bookElements","bookArray","newWidth","el","bookMapper","row","thumbnailWidth","isbn","_b","_a","asin","_d","_c","title","_e","author","_g","_f","imageUrl","_i","_h","href","_j","rating","_k","dateReadString","_l","dateAddedString","_m","dateRead","dateAdded","subtitle","splitTitle","parens","match","GOODREADS_PAGE_SIZE","ALL_GROUP_TITLE","fetchAllBooks","firstPage","fetchPage","maxBooks","maxPages","promises","i","data","a","b","books","prev","cur","grouped","key","groups","response","responseBody","status","parseJsonP","table","jsonp","json","output","matches","useGoodreadsShelf","userId","limit","order","search","shelf","sort","setBooks","useState","loading","setLoading","error","setError","refresh","err","useEffect","Placeholder","_jsx","_jsxs","Cover","book","state","setState","isInView","setIsInView","root","useRef","observer","entries","isIntersecting","onError","getBackground","useMemo","imageUrl2","backgroundImage","options","cover","image","Rating","stars","arr","Details","hideDetails","shouldShow","item","styles","details","Book","link","shelfStyle","gap","BookList","Loader","GoodreadsBookshelf","group","groupTitle","GoodreadsBookshelf$1"],"mappings":"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"}